import { formatCurrencyAmount } from '@opuscapita/format-utils'; // TODO: Missing edit/create/filter support

export default {
  // currencyValueRender
  valRender: function valRender(col, gridData, rowIndex, thousandSeparator, decimalSeparator, valueRender) {
    var currencyKeyPath = col.valueOptions && (col.valueOptions.currencyKeyPath || ['currency']);
    return valueRender(rowIndex, function (v) {
      return formatCurrencyAmount(v, {
        currency: gridData.getIn([rowIndex].concat(currencyKeyPath)),
        decimals: col.valueOptions && col.valueOptions.decimals,
        thousandSeparator: col.valueOptions && col.valueOptions.thousandSeparator || thousandSeparator,
        decimalSeparator: col.valueOptions && col.valueOptions.decimalSeparator || decimalSeparator
      });
    });
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9kYXRhZ3JpZC9jb2x1bW4tc2VydmljZS9jb2x1bW4tdHlwZXMvY3VycmVuY3ktcmVuZGVyZXJzLmpzeCJdLCJuYW1lcyI6WyJmb3JtYXRDdXJyZW5jeUFtb3VudCIsInZhbFJlbmRlciIsImNvbCIsImdyaWREYXRhIiwicm93SW5kZXgiLCJ0aG91c2FuZFNlcGFyYXRvciIsImRlY2ltYWxTZXBhcmF0b3IiLCJ2YWx1ZVJlbmRlciIsImN1cnJlbmN5S2V5UGF0aCIsInZhbHVlT3B0aW9ucyIsInYiLCJjdXJyZW5jeSIsImdldEluIiwiZGVjaW1hbHMiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLG9CQUFULFFBQXFDLDBCQUFyQyxDLENBRUE7O0FBRUEsZUFBZTtBQUNiO0FBQ0FDLEVBQUFBLFNBRmEscUJBRUhDLEdBRkcsRUFFRUMsUUFGRixFQUVZQyxRQUZaLEVBRXNCQyxpQkFGdEIsRUFFeUNDLGdCQUZ6QyxFQUUyREMsV0FGM0QsRUFFd0U7QUFDbkYsUUFBTUMsZUFBZSxHQUFHTixHQUFHLENBQUNPLFlBQUosS0FBcUJQLEdBQUcsQ0FBQ08sWUFBSixDQUFpQkQsZUFBakIsSUFBb0MsQ0FBQyxVQUFELENBQXpELENBQXhCO0FBQ0EsV0FBT0QsV0FBVyxDQUFDSCxRQUFELEVBQVcsVUFBQU0sQ0FBQztBQUFBLGFBQUlWLG9CQUFvQixDQUFDVSxDQUFELEVBQUk7QUFDeERDLFFBQUFBLFFBQVEsRUFBRVIsUUFBUSxDQUFDUyxLQUFULEVBQWdCUixRQUFoQixTQUE2QkksZUFBN0IsRUFEOEM7QUFFeERLLFFBQUFBLFFBQVEsRUFBRVgsR0FBRyxDQUFDTyxZQUFKLElBQW9CUCxHQUFHLENBQUNPLFlBQUosQ0FBaUJJLFFBRlM7QUFHeERSLFFBQUFBLGlCQUFpQixFQUNaSCxHQUFHLENBQUNPLFlBQUosSUFBb0JQLEdBQUcsQ0FBQ08sWUFBSixDQUFpQkosaUJBQXRDLElBQTREQSxpQkFKUjtBQUt4REMsUUFBQUEsZ0JBQWdCLEVBQ1hKLEdBQUcsQ0FBQ08sWUFBSixJQUFvQlAsR0FBRyxDQUFDTyxZQUFKLENBQWlCSCxnQkFBdEMsSUFBMkRBO0FBTlAsT0FBSixDQUF4QjtBQUFBLEtBQVosQ0FBbEI7QUFRRDtBQVpZLENBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3JtYXRDdXJyZW5jeUFtb3VudCB9IGZyb20gJ0BvcHVzY2FwaXRhL2Zvcm1hdC11dGlscyc7XG5cbi8vIFRPRE86IE1pc3NpbmcgZWRpdC9jcmVhdGUvZmlsdGVyIHN1cHBvcnRcblxuZXhwb3J0IGRlZmF1bHQge1xuICAvLyBjdXJyZW5jeVZhbHVlUmVuZGVyXG4gIHZhbFJlbmRlcihjb2wsIGdyaWREYXRhLCByb3dJbmRleCwgdGhvdXNhbmRTZXBhcmF0b3IsIGRlY2ltYWxTZXBhcmF0b3IsIHZhbHVlUmVuZGVyKSB7XG4gICAgY29uc3QgY3VycmVuY3lLZXlQYXRoID0gY29sLnZhbHVlT3B0aW9ucyAmJiAoY29sLnZhbHVlT3B0aW9ucy5jdXJyZW5jeUtleVBhdGggfHwgWydjdXJyZW5jeSddKTtcbiAgICByZXR1cm4gdmFsdWVSZW5kZXIocm93SW5kZXgsIHYgPT4gZm9ybWF0Q3VycmVuY3lBbW91bnQodiwge1xuICAgICAgY3VycmVuY3k6IGdyaWREYXRhLmdldEluKFtyb3dJbmRleCwgLi4uY3VycmVuY3lLZXlQYXRoXSksXG4gICAgICBkZWNpbWFsczogY29sLnZhbHVlT3B0aW9ucyAmJiBjb2wudmFsdWVPcHRpb25zLmRlY2ltYWxzLFxuICAgICAgdGhvdXNhbmRTZXBhcmF0b3I6XG4gICAgICAgICAgKGNvbC52YWx1ZU9wdGlvbnMgJiYgY29sLnZhbHVlT3B0aW9ucy50aG91c2FuZFNlcGFyYXRvcikgfHwgdGhvdXNhbmRTZXBhcmF0b3IsXG4gICAgICBkZWNpbWFsU2VwYXJhdG9yOlxuICAgICAgICAgIChjb2wudmFsdWVPcHRpb25zICYmIGNvbC52YWx1ZU9wdGlvbnMuZGVjaW1hbFNlcGFyYXRvcikgfHwgZGVjaW1hbFNlcGFyYXRvcixcbiAgICB9KSk7XG4gIH0sXG59O1xuIl19